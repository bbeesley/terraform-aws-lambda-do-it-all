version: 2.1
workflows:
  check:
    jobs:
      - validate:
          name: validate
          filters:
            tags:
              ignore: /.*/
      - documentation:
          name: documentation
          filters:
            tags:
              ignore: /.*/
      - publish:
          requires:
            - documentation
            - validate
          filters:
            tags:
              ignore: /.*/
jobs:
  validate:
    docker:
      - image: hashicorp/terraform:light
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Add Provider
          command: |
            echo 'provider "aws" {
              region = "eu-central-1"
            }
            ' > provider.tf
      - run:
          name: terraform init
          command: terraform init
      - run:
          name: terraform validate
          command: terraform validate
  documentation:
    docker:
      - image: hashicorp/terraform:light
    working_directory: ~/repo
    steps:
      - checkout
      - run: apk add --update curl
      - run: curl -Lo ./terraform-docs https://github.com/segmentio/terraform-docs/releases/download/v0.8.2/terraform-docs-v0.8.2-$(uname | tr '[:upper:]' '[:lower:]')-amd64
      - run: chmod +x ./terraform-docs
      - run: |
            echo '<!--
            Dynamically generated file
            Do not modify
            To edit the contents of this file, modify the header and footer in the templates directory
            -->' > README.md
      - run: cat templates/HEADER.md >> README.md
      - run: ./terraform-docs markdown table . >> README.md
      - run: cat templates/FOOTER.md >> README.md
      - run: cat README.md
      - persist_to_workspace:
          root: ~/repo
          paths: .
  publish:
    docker:
      - image: circleci/node:12
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Discable strict ssh key checking
          command: mkdir -p ~/.ssh && echo -e "Host github.com\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile /dev/null\n" > ~/.ssh/config
      - run:
          name: Publish package
          command: |
            last_commit="$(git log -1 --pretty=%B | cat | grep 'chore(release)')" || true
            if [[ ${last_commit} == *[chore\(release\)]* ]]
            then echo "last commit was release, skipping semantic release step"
            else npm run release
            fi
